import srt
import re
from pathlib import Path

def move_short_sentences(subtitles):
    new_subs = list(subtitles)

    for i, sub in enumerate(subtitles):
        text = sub.content.strip()

        # ==== X·ª¨ L√ù C√ÇU NG·∫ÆN ·ªû ƒê·∫¶U PH·ª§ ƒê·ªÄ ====
        match = re.match(r'^((?:[\w√Ä-·ªπ\'‚Äô\-]+\s?){1,2})([.,?!])', text)
        if match and i > 0:
            matched_text = match.group(0)
            # Ki·ªÉm tra n·∫øu sau d·∫•u c√¢u v·∫´n c√≤n ch·ªØ (kh√¥ng ph·∫£i cu·ªëi ƒëo·∫°n)
            if len(text) > len(matched_text):
                new_subs[i].content = text[len(matched_text):].lstrip()
                new_subs[i - 1].content = new_subs[i - 1].content.rstrip() + ' ' + matched_text

        # ==== X·ª¨ L√ù C√ÇU NG·∫ÆN ·ªû CU·ªêI PH·ª§ ƒê·ªÄ ====
        match_end = re.search(r'((?:[\w√Ä-·ªπ\'‚Äô\-]+\s?){1,2})([.,?!])\s*$', text)
        if match_end and i < len(subtitles) - 1:
            matched_text = match_end.group(0)
            # Ch·ªâ x·ª≠ l√Ω n·∫øu d·∫•u c√¢u KH√îNG ph·∫£i l√† k√Ω t·ª± cu·ªëi c√πng c·ªßa to√†n b·ªô n·ªôi dung
            if not text.endswith(matched_text.strip()):
                words = match_end.group(1).strip()
                new_subs[i].content = text[:text.rfind(matched_text)].rstrip()
                new_subs[i + 1].content = words + ' ' + new_subs[i + 1].content.lstrip()

    return new_subs

if __name__ == "__main__":
    # X√°c ƒë·ªãnh th∆∞ m·ª•c storage c√πng c·∫•p v·ªõi th∆∞ m·ª•c cha c·ªßa script
    current_dir = Path(__file__).resolve().parent
    parent_dir = current_dir.parent
    storage_dir = parent_dir / "storage"

    # L·∫∑p qua t·∫•t c·∫£ file .cleaned.srt trong th∆∞ m·ª•c storage
    input_files = storage_dir.glob('*.cleaned.srt')

    found = False
    for input_path in input_files:
        found = True
        print(f"üìÑ ƒêang x·ª≠ l√Ω: {input_path.name}")

        with open(input_path, 'r', encoding='utf-8') as f:
            srt_data = f.read()

        subs = list(srt.parse(srt_data))
        cleaned_subs = move_short_sentences(subs)
        output_srt = srt.compose(cleaned_subs)

        # T·∫°o file output .vi.merge.srt trong storage
        output_path = input_path.with_name(input_path.name.replace('.cleaned.srt', '.merge.srt'))
        with open(output_path, 'w', encoding='utf-8') as f:
            f.write(output_srt)

        print(f"‚úÖ ƒê√£ l∆∞u: {output_path.name}")

    if not found:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file .cleaned.srt n√†o trong th∆∞ m·ª•c: {storage_dir}")
    else:
        print("üéâ Ho√†n t·∫•t x·ª≠ l√Ω t·∫•t c·∫£ file .cleaned.srt.")